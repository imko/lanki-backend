name: Commit Stage
on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: lanki-backend/note-service
  VERSION: latest

jobs:
  build:
    defaults:
      run:
        working-directory: note-service
    name: Build and Test
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: maven
      - name: Build, unit tests and integration tests
        run: |
          git update-index --chmod=+x mvnw
          ./mvnw clean install
  package:
    defaults:
      run:
        working-directory: note-service
    name: Package and Publish
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [ build ]
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: maven
      - name: Build container image
        run: |
          git update-index --chmod=+x mvnw
          ./mvnw spring-boot:build-image -DregistryUsername=${{ github.actor }} -DregistryPassword=${{ secrets.GITHUB_TOKEN }}
      - name: OCI image vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          fail-build: false
          severity-cutoff: high
#      - name: Log into container registry
#        uses: docker/login-action@v2
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#      - name: Publish container image
#        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}